name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v5

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run ruff format check
        if: always()
        run: poetry run ruff format --check --diff .

      - name: Run ruff lint check
        if: always()
        run: poetry run ruff check --diff .

      - name: Run consistency checks between stub & module
        if: always()
        env:
          PYTHONPATH: "."
        run: poetry run stubtest logprise

      - name: Running mypy
        if: always()
        env:
          PYTHONPATH: "."
        run: poetry run mypy .

      - name: Run tests with coverage
        if: always()
        run: poetry run pytest --cov=logprise --cov-report=xml

      - name: Upload coverage report
        if: github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
